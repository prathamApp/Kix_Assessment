//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.kix.assessment.ui.household_activity.household_information_form;

import java.util.HashMap;
import java.util.Map;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.kix.assessment.R;
import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class Fragment_AddHouseholdInformation_
    extends com.kix.assessment.ui.household_activity.household_information_form.Fragment_AddHouseholdInformation
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.fragment_add_information_household, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        tv_title = null;
        et_members = null;
        rg_speakEnglish = null;
        rg_engHowOften = null;
        rg_anyOtherLang = null;
        rg_hhRoofing = null;
        rg_hhWall = null;
        rg_lightSource = null;
        rg_waterSource = null;
        rg_payForWater = null;
        rg_toilet = null;
        rg_memberCompletedDiploma = null;
        rg_readingMaterial = null;
        rg_otherBooks = null;
        rg_computer = null;
        rg_television = null;
        rg_mobile = null;
        rg_isItSmartphone = null;
        rg_motorVehicle = null;
        cb_HH07pFourWheel = null;
        cb_HH07pThreeWheel = null;
        cb_HH07pTwoWheel = null;
        rg_bicycle = null;
        rl_payForWater = null;
        rl_isItSmartphone = null;
        rl_noOfWheels = null;
        rl_howOften = null;
        rl_otherLang = null;
        til_HH07c = null;
        et_HH07c_other = null;
        btn_save = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static Fragment_AddHouseholdInformation_.FragmentBuilder_ builder() {
        return new Fragment_AddHouseholdInformation_.FragmentBuilder_();
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.tv_title = hasViews.internalFindViewById(R.id.tv_title);
        this.et_members = hasViews.internalFindViewById(R.id.et_HH06a);
        this.rg_speakEnglish = hasViews.internalFindViewById(R.id.rg_HH06b);
        this.rg_engHowOften = hasViews.internalFindViewById(R.id.rg_HH06c);
        this.rg_anyOtherLang = hasViews.internalFindViewById(R.id.rg_HH06d);
        this.rg_hhRoofing = hasViews.internalFindViewById(R.id.rg_HH07a);
        this.rg_hhWall = hasViews.internalFindViewById(R.id.rg_HH07b);
        this.rg_lightSource = hasViews.internalFindViewById(R.id.rg_HH07c);
        this.rg_waterSource = hasViews.internalFindViewById(R.id.rg_HH07d_1);
        this.rg_payForWater = hasViews.internalFindViewById(R.id.rg_HH07d_2);
        this.rg_toilet = hasViews.internalFindViewById(R.id.rg_HH07f);
        this.rg_memberCompletedDiploma = hasViews.internalFindViewById(R.id.rg_HH07g);
        this.rg_readingMaterial = hasViews.internalFindViewById(R.id.rg_HH07h);
        this.rg_otherBooks = hasViews.internalFindViewById(R.id.rg_HH07i);
        this.rg_computer = hasViews.internalFindViewById(R.id.rg_HH07j);
        this.rg_television = hasViews.internalFindViewById(R.id.rg_HH07k);
        this.rg_mobile = hasViews.internalFindViewById(R.id.rg_HH07m);
        this.rg_isItSmartphone = hasViews.internalFindViewById(R.id.rg_HH07n);
        this.rg_motorVehicle = hasViews.internalFindViewById(R.id.rg_HH07o);
        this.cb_HH07pFourWheel = hasViews.internalFindViewById(R.id.ch1_HH07p);
        this.cb_HH07pThreeWheel = hasViews.internalFindViewById(R.id.ch2_HH07p);
        this.cb_HH07pTwoWheel = hasViews.internalFindViewById(R.id.ch3_HH07p);
        this.rg_bicycle = hasViews.internalFindViewById(R.id.rg_HH07q);
        this.rl_payForWater = hasViews.internalFindViewById(R.id.rl_HH07d_2);
        this.rl_isItSmartphone = hasViews.internalFindViewById(R.id.rl_HH07n);
        this.rl_noOfWheels = hasViews.internalFindViewById(R.id.rl_HH07p);
        this.rl_howOften = hasViews.internalFindViewById(R.id.rl_HH06c);
        this.rl_otherLang = hasViews.internalFindViewById(R.id.rl_HH06d);
        this.til_HH07c = hasViews.internalFindViewById(R.id.til_HH07c);
        this.et_HH07c_other = hasViews.internalFindViewById(R.id.et_HH07c_other);
        this.btn_save = hasViews.internalFindViewById(R.id.btn_save);
        if (this.btn_save!= null) {
            this.btn_save.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    Fragment_AddHouseholdInformation_.this.saveHIF();
                }
            }
            );
        }
        initialize();
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<Fragment_AddHouseholdInformation_.FragmentBuilder_, com.kix.assessment.ui.household_activity.household_information_form.Fragment_AddHouseholdInformation>
    {

        @Override
        public com.kix.assessment.ui.household_activity.household_information_form.Fragment_AddHouseholdInformation build() {
            Fragment_AddHouseholdInformation_ fragment_ = new Fragment_AddHouseholdInformation_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
