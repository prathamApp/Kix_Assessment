//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.foundation.ui.contentPlayer.audio_player;

import java.util.HashMap;
import java.util.Map;
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.pratham.foundation.R;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class AudioPlayerFragment_
    extends com.pratham.foundation.ui.contentPlayer.audio_player.AudioPlayerFragment
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.fragment_audio_player, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        tv_title = null;
        start_time = null;
        end_time = null;
        ib_play = null;
        imageView = null;
        seekbar = null;
        rl_no_data = null;
        main_layout = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static AudioPlayerFragment_.FragmentBuilder_ builder() {
        return new AudioPlayerFragment_.FragmentBuilder_();
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.tv_title = hasViews.internalFindViewById(R.id.tv_title);
        this.start_time = hasViews.internalFindViewById(R.id.start_time);
        this.end_time = hasViews.internalFindViewById(R.id.end_time);
        this.ib_play = hasViews.internalFindViewById(R.id.ib_play);
        this.imageView = hasViews.internalFindViewById(R.id.imageView);
        this.seekbar = hasViews.internalFindViewById(R.id.seekBar);
        this.rl_no_data = hasViews.internalFindViewById(R.id.rl_no_data);
        this.main_layout = hasViews.internalFindViewById(R.id.main_layout);
        View view_ib_rewind = hasViews.internalFindViewById(R.id.ib_rewind);
        View view_ib_fastforward = hasViews.internalFindViewById(R.id.ib_fastforward);
        View view_ib_stop = hasViews.internalFindViewById(R.id.ib_stop);
        View view_submit = hasViews.internalFindViewById(R.id.submit);
        View view_btn_next = hasViews.internalFindViewById(R.id.btn_next);
        View view_btn_prev = hasViews.internalFindViewById(R.id.btn_prev);

        if (this.ib_play!= null) {
            this.ib_play.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.onPlayClicked();
                }
            }
            );
        }
        if (view_ib_rewind!= null) {
            view_ib_rewind.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.onRewindClicked();
                }
            }
            );
        }
        if (view_ib_fastforward!= null) {
            view_ib_fastforward.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.onFastForwardClicked();
                }
            }
            );
        }
        if (view_ib_stop!= null) {
            view_ib_stop.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.onStopClicked();
                }
            }
            );
        }
        if (view_submit!= null) {
            view_submit.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.submitClick();
                }
            }
            );
        }
        if (view_btn_next!= null) {
            view_btn_next.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.onNextClick();
                }
            }
            );
        }
        if (view_btn_prev!= null) {
            view_btn_prev.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AudioPlayerFragment_.this.onPreviousClick();
                }
            }
            );
        }
        initiate();
    }

    @Override
    public void showNoData() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                AudioPlayerFragment_.super.showNoData();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "DefaultLocale"
    })
    @Override
    public void onPlayClicked() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                AudioPlayerFragment_.super.onPlayClicked();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "DefaultLocale"
    })
    @Override
    public void onRewindClicked() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                AudioPlayerFragment_.super.onRewindClicked();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "DefaultLocale"
    })
    @Override
    public void onFastForwardClicked() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                AudioPlayerFragment_.super.onFastForwardClicked();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "DefaultLocale"
    })
    @Override
    public void onStopClicked() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                AudioPlayerFragment_.super.onStopClicked();
            }
        }
        , 0L);
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<AudioPlayerFragment_.FragmentBuilder_, com.pratham.foundation.ui.contentPlayer.audio_player.AudioPlayerFragment>
    {

        @Override
        public com.pratham.foundation.ui.contentPlayer.audio_player.AudioPlayerFragment build() {
            AudioPlayerFragment_ fragment_ = new AudioPlayerFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
