//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.foundation.ui.contentPlayer.reading_paragraphs;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import androidx.core.app.ActivityCompat;
import com.pratham.foundation.R;
import com.pratham.foundation.modalclasses.ModalParaWord;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class ReadingParagraphsActivity_
    extends ReadingParagraphsActivity
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(R.layout.activity_paragraphs_reading);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T) this.findViewById(id));
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        this.presenter = ReadingParagraphsPresenter_.getInstance_(this, null);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ReadingParagraphsActivity_.IntentBuilder_ intent(Context context) {
        return new ReadingParagraphsActivity_.IntentBuilder_(context);
    }

    public static ReadingParagraphsActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new ReadingParagraphsActivity_.IntentBuilder_(fragment);
    }

    public static ReadingParagraphsActivity_.IntentBuilder_ intent(androidx.fragment.app.Fragment supportFragment) {
        return new ReadingParagraphsActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.myFlowLayout = hasViews.internalFindViewById(R.id.myflowlayout);
        this.tvContentTitle = hasViews.internalFindViewById(R.id.tv_content_title);
        this.stt_result_tv = hasViews.internalFindViewById(R.id.stt_result_tv);
        this.clean_stt = hasViews.internalFindViewById(R.id.clean_stt);
        this.btn_Play = hasViews.internalFindViewById(R.id.btn_play);
        this.btn_Mic = hasViews.internalFindViewById(R.id.btn_mic);
        this.myScrollView = hasViews.internalFindViewById(R.id.myScrollView);
        this.layout_mic_ripple = hasViews.internalFindViewById(R.id.layout_mic_ripple);
        this.ll_btn_play = hasViews.internalFindViewById(R.id.ll_btn_play);
        this.ll_btn_submit = hasViews.internalFindViewById(R.id.ll_btn_submit);
        this.btn_submit = hasViews.internalFindViewById(R.id.btn_submit);
        this.ll_btn_stop = hasViews.internalFindViewById(R.id.ll_btn_stop);
        this.iv_monk = hasViews.internalFindViewById(R.id.iv_monk);
        this.floating_back = hasViews.internalFindViewById(R.id.floating_back);
        this.floating_info = hasViews.internalFindViewById(R.id.floating_info);
        this.ll_edit_text = hasViews.internalFindViewById(R.id.ll_edit_text);
        this.et_edit_ans = hasViews.internalFindViewById(R.id.et_edit_ans);
        this.bt_edit_ok = hasViews.internalFindViewById(R.id.bt_edit_ok);
        this.silence_outer_layout = hasViews.internalFindViewById(R.id.silence_outer);
        this.silence_main_layout = hasViews.internalFindViewById(R.id.silence_main_layout);
        this.silence_iv = hasViews.internalFindViewById(R.id.silence_iv);
        View view_btn_stop_audio = hasViews.internalFindViewById(R.id.btn_stop_audio);

        if (this.btn_Mic!= null) {
            this.btn_Mic.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.startReading();
                }
            }
            );
        }
        if (this.btn_Play!= null) {
            this.btn_Play.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.playSound();
                }
            }
            );
        }
        if (view_btn_stop_audio!= null) {
            view_btn_stop_audio.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.stopAudioSound();
                }
            }
            );
        }
        if (this.floating_back!= null) {
            this.floating_back.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.pressedBackBtn();
                }
            }
            );
        }
        if (this.btn_submit!= null) {
            this.btn_submit.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.submitTest();
                }
            }
            );
        }
        if (this.clean_stt!= null) {
            this.clean_stt.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.sttClearClicked();
                }
            }
            );
        }
        if (this.bt_edit_ok!= null) {
            this.bt_edit_ok.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReadingParagraphsActivity_.this.editOKClicked();
                }
            }
            );
        }
        initialize();
    }

    @Override
    public void setCategoryTitle(final String title) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.setCategoryTitle(title);
            }
        }
        , 0L);
    }

    @Override
    public void setListData(final List<ModalParaWord> paraDataList) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.setListData(paraDataList);
            }
        }
        , 0L);
    }

    @Override
    public void setParaAudio(final String paraAudio) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.setParaAudio(paraAudio);
            }
        }
        , 0L);
    }

    @Override
    public void initializeContent() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.initializeContent();
            }
        }
        , 0L);
    }

    @Override
    public void setCorrectViewColor() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.setCorrectViewColor();
            }
        }
        , 0L);
    }

    @Override
    public void allCorrectAnswer() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.allCorrectAnswer();
            }
        }
        , 0L);
    }

    @Override
    public void showLoader() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.showLoader();
            }
        }
        , 0L);
    }

    @Override
    public void dismissLoadingDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReadingParagraphsActivity_.super.dismissLoadingDialog();
            }
        }
        , 0L);
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<ReadingParagraphsActivity_.IntentBuilder_>
    {
        private android.app.Fragment fragment_;
        private androidx.fragment.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, ReadingParagraphsActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), ReadingParagraphsActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(androidx.fragment.app.Fragment fragment) {
            super(fragment.getActivity(), ReadingParagraphsActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
            return new PostActivityStarter(context);
        }
    }
}
