//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.foundation.ui.app_home.learning_fragment;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.pratham.foundation.R;
import com.pratham.foundation.database.domain.ContentTable;
import com.pratham.foundation.database.domain.Groups;
import com.pratham.foundation.modalclasses.Modal_FileDownloading;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class LearningFragment_
    extends com.pratham.foundation.ui.app_home.learning_fragment.LearningFragment
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.fragment_tab_one, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        my_recycler_view = null;
        rl_no_data = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        this.presenter = LearningPresenter_.getInstance_(getActivity(), this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static LearningFragment_.FragmentBuilder_ builder() {
        return new LearningFragment_.FragmentBuilder_();
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.my_recycler_view = hasViews.internalFindViewById(R.id.my_recycler_view);
        this.rl_no_data = hasViews.internalFindViewById(R.id.rl_no_data);
        View view_btn_back = hasViews.internalFindViewById(R.id.btn_back);

        if (view_btn_back!= null) {
            view_btn_back.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LearningFragment_.this.backBtnPressed();
                }
            }
            );
        }
        initialize();
    }

    @Override
    public void notifyAdapter() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.notifyAdapter();
            }
        }
        , 0L);
    }

    @Override
    public void addContentToViewList(final List<ContentTable> contentParentList) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.addContentToViewList(contentParentList);
            }
        }
        , 0L);
    }

    @Override
    public void showZipLoader() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showZipLoader();
            }
        }
        , 0L);
    }

    @Override
    public void showNoDataLayout() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showNoDataLayout();
            }
        }
        , 0L);
    }

    @Override
    public void showRecyclerLayout() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showRecyclerLayout();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void showNoDataDownloadedDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showNoDataDownloadedDialog();
            }
        }
        , 0L);
    }

    @Override
    public void showLoader() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showLoader();
            }
        }
        , 0L);
    }

    @Override
    public void dismissLoadingDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.dismissLoadingDialog();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void setLevelprogress(final int percent) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.setLevelprogress(percent);
            }
        }
        , 0L);
    }

    @Override
    public void onPreResOpenClicked(final int position, final String nId, final String title, final boolean onSDCard) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.onPreResOpenClicked(position, nId, title, onSDCard);
            }
        }
        , 0L);
    }

    @Override
    public void openAttendanceDialog(final List<Groups> groupsList) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.openAttendanceDialog(groupsList);
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void downloadAssessmentAppDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.downloadAssessmentAppDialog();
            }
        }
        , 0L);
    }

    @Override
    public void onContentDownloadClicked(final ContentTable contentList, final int parentPos, final int childPos, final String downloadType) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.onContentDownloadClicked(contentList, parentPos, childPos, downloadType);
            }
        }
        , 0L);
    }

    @Override
    public void onContentDeleteClicked(final int parentPos, final int childPos, final ContentTable contentList) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.onContentDeleteClicked(parentPos, childPos, contentList);
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void resourceDownloadDialog(final Modal_FileDownloading modal_fileDownloading) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.resourceDownloadDialog(modal_fileDownloading);
            }
        }
        , 0L);
    }

    @Override
    public void dismissDownloadDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.dismissDownloadDialog();
            }
        }
        , 0L);
    }

    @Override
    public void showDownloadErrorDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showDownloadErrorDialog();
            }
        }
        , 0L);
    }

    @Override
    public void showToast(final String msg) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.showToast(msg);
            }
        }
        , 0L);
    }

    @Override
    public void notifyAdapterItem(final int parentPos, final int childPos) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.notifyAdapterItem(parentPos, childPos);
            }
        }
        , 0L);
    }

    @Override
    public void serverIssueDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LearningFragment_.super.serverIssueDialog();
            }
        }
        , 0L);
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<LearningFragment_.FragmentBuilder_, com.pratham.foundation.ui.app_home.learning_fragment.LearningFragment>
    {

        @Override
        public com.pratham.foundation.ui.app_home.learning_fragment.LearningFragment build() {
            LearningFragment_ fragment_ = new LearningFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
