//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.foundation.ui.app_home.profile_new;

import java.util.HashMap;
import java.util.Map;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.pratham.foundation.R;
import com.pratham.foundation.async.PushDataToServer_New_;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class ProfileFragment_
    extends com.pratham.foundation.ui.app_home.profile_new.ProfileFragment
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.fragment_profile, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        my_recycler_view = null;
        tv_studentName = null;
        tv_usage = null;
        tv_days = null;
        certi1_perc = null;
        certi1_subj = null;
        certi2_perc = null;
        certi2_subj = null;
        certi3_perc = null;
        certi3_subj = null;
        rl_certi1 = null;
        rl_certi2 = null;
        rl_certi3 = null;
        ib_langChange = null;
        card_img = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        this.presenter = ProfilePresenter_.getInstance_(getActivity(), this);
        this.pushDataToServer = PushDataToServer_New_.getInstance_(getActivity(), this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ProfileFragment_.FragmentBuilder_ builder() {
        return new ProfileFragment_.FragmentBuilder_();
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.my_recycler_view = hasViews.internalFindViewById(R.id.my_recycler_view);
        this.tv_studentName = hasViews.internalFindViewById(R.id.tv_studentName);
        this.tv_usage = hasViews.internalFindViewById(R.id.tv_usage);
        this.tv_days = hasViews.internalFindViewById(R.id.tv_days);
        this.certi1_perc = hasViews.internalFindViewById(R.id.certi1_perc);
        this.certi1_subj = hasViews.internalFindViewById(R.id.certi1_subj);
        this.certi2_perc = hasViews.internalFindViewById(R.id.certi2_perc);
        this.certi2_subj = hasViews.internalFindViewById(R.id.certi2_subj);
        this.certi3_perc = hasViews.internalFindViewById(R.id.certi3_perc);
        this.certi3_subj = hasViews.internalFindViewById(R.id.certi3_subj);
        this.rl_certi1 = hasViews.internalFindViewById(R.id.rl_certi1);
        this.rl_certi2 = hasViews.internalFindViewById(R.id.rl_certi2);
        this.rl_certi3 = hasViews.internalFindViewById(R.id.rl_certi3);
        this.ib_langChange = hasViews.internalFindViewById(R.id.ib_langChange);
        this.card_img = hasViews.internalFindViewById(R.id.card_img);
        if (this.card_img!= null) {
            this.card_img.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ProfileFragment_.this.showBottomFragment();
                }
            }
            );
        }
        if (this.ib_langChange!= null) {
            this.ib_langChange.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ProfileFragment_.this.langChangeButtonClick();
                }
            }
            );
        }
        initialize();
    }

    @Override
    public void endSession() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    ProfileFragment_.super.endSession();
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<ProfileFragment_.FragmentBuilder_, com.pratham.foundation.ui.app_home.profile_new.ProfileFragment>
    {

        @Override
        public com.pratham.foundation.ui.app_home.profile_new.ProfileFragment build() {
            ProfileFragment_ fragment_ = new ProfileFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
