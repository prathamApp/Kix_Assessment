//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.foundation.async;

import android.annotation.SuppressLint;
import android.content.Context;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.UiThreadExecutor;
import org.json.JSONObject;

public final class PushDataToServer_New_
    extends PushDataToServer_New
{
    private Context context_;
    private Object rootFragment_;

    private PushDataToServer_New_(Context context) {
        super(context);
        context_ = context;
        init_();
    }

    private PushDataToServer_New_(Context context, Object rootFragment) {
        super(context);
        context_ = context;
        rootFragment_ = rootFragment;
        init_();
    }

    public static PushDataToServer_New_ getInstance_(Context context) {
        return new PushDataToServer_New_(context);
    }

    public static PushDataToServer_New_ getInstance_(Context context, Object rootFragment) {
        return new PushDataToServer_New_(context, rootFragment);
    }

    private void init_() {
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void setMainTextToDialog(final String dialogMsg) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.setMainTextToDialog(dialogMsg);
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void setSyncLottieToDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.setSyncLottieToDialog();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void setSubTextToDialog(final String dialogMsg) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.setSubTextToDialog(dialogMsg);
            }
        }
        , 0L);
    }

    @Override
    public void showPushDialog(final Context context) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.showPushDialog(context);
            }
        }
        , 0L);
    }

    @Override
    public void setDataPushSuccessfull() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.setDataPushSuccessfull();
            }
        }
        , 0L);
    }

    @Override
    public void hideOKBtn() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.hideOKBtn();
            }
        }
        , 0L);
    }

    @Override
    public void setDataPushFailed() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.setDataPushFailed();
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void updateCntr(final int imgCtr) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.updateCntr(imgCtr);
            }
        }
        , 0L);
    }

    @Override
    public void pushImagesToServer(final int jsonIndex) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.pushImagesToServer(jsonIndex);
            }
        }
        , 0L);
    }

    @SuppressLint({
        "SetTextI18n"
    })
    @Override
    public void showTotalImgStatus() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                PushDataToServer_New_.super.showTotalImgStatus();
            }
        }
        , 0L);
    }

    @Override
    public void startDataPush(final Context context, final boolean showUi) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    PushDataToServer_New_.super.startDataPush(context, showUi);
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    @Override
    public void setPushFlag() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    PushDataToServer_New_.super.setPushFlag();
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    @Override
    public void getImageList() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    PushDataToServer_New_.super.getImageList();
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    @Override
    public void getFacilityId(final JSONObject requestString) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    PushDataToServer_New_.super.getFacilityId(requestString);
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }
}
