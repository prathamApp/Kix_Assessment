//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.foundation.ui.splash_activity;

import android.annotation.SuppressLint;
import android.content.Context;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.UiThreadExecutor;

public final class SplashPresenter_
    extends SplashPresenter
{
    private Context context_;
    private Object rootFragment_;

    private SplashPresenter_(Context context) {
        super(context);
        context_ = context;
        init_();
    }

    private SplashPresenter_(Context context, Object rootFragment) {
        super(context);
        context_ = context;
        rootFragment_ = rootFragment;
        init_();
    }

    public static SplashPresenter_ getInstance_(Context context) {
        return new SplashPresenter_(context);
    }

    public static SplashPresenter_ getInstance_(Context context, Object rootFragment) {
        return new SplashPresenter_(context, rootFragment);
    }

    private void init_() {
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @Override
    public void callCopyDB() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                SplashPresenter_.super.callCopyDB();
            }
        }
        , 0L);
    }

    @Override
    public void copyDBFile() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                SplashPresenter_.super.copyDBFile();
            }
        }
        , 0L);
    }

    @Override
    public void copyTestJsons(final int no) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                SplashPresenter_.super.copyTestJsons(no);
            }
        }
        , 0L);
    }

    @Override
    public void copyInternalTestJsons(final int no) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                SplashPresenter_.super.copyInternalTestJsons(no);
            }
        }
        , 0L);
    }

    @Override
    @SuppressLint({
        "StaticFieldLeak"
    })
    public void createDatabase() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    SplashPresenter_.super.createDatabase();
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    @SuppressLint({
        "StaticFieldLeak"
    })
    @Override
    public void copyDataBase() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    SplashPresenter_.super.copyDataBase();
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }
}
